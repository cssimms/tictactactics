c
empty?(pos)
your_turn?(mark)
in_bounds?(pos)
mark
pos
c
@board.place_mark(move, mark)
@board
self.moveset
self
self.build_game
mark
move
c
@game.make_move(new_move, game_params[:mark])
@game
new_move
c
n
self
n
@board
self
quit
@board
self.board
self
c
self
c
Game.find_by_id(7)
self
c
quit
self
c
your_turn?('X')
in_bounds?(pos)
c
pos
in_bounds?(pos)
in_bounds?(pos)_
c
in_bounds?(pos)
mark
pos
c
mark
move
c
move
c
move
c
move
c
move
s
n
mark
n
c
mark
pos
n
@board
n
moves
n
c
move
c
n
move
c
params
c
JSON.parse(params[:game])
params[:game]
params
c
json.extract! @game
@game
c
@game
c
json.extract! @game
@game
c
self
c
self
c
self
exit
qxit
c
line.all?{|p| self[*p] == "X"}
self[1,1]
self[[1,1,]]
c
self.moveset
c
self.moveset
c
display self
c
display line
c
line
c
self.moveset
self
c
self
c
self
c
self
c
self
c
line
c
s
line
s
self
c
self
c
self
c
self
c
self
selff
@board.grid
c
self.moveset
@board.winner
c
@board.winner
self.moveset
c
self.moveset
c
self.moveset
c
self.moveset
c
self.moveset
c
self.moveset
self
c
@board.winner
@board.grid
self.moveset
self
@moveset
@board.winner
c
@board.winner
@board.over?
@board.over
@board.over?
@board
self
self.winner = 'd'
self
self.status = "closed"
self
n
self
n
c
@board.winner
@board
self.winner
self.status
self.moveset
c
move
n
@board.over?
@board
n
s
self
c
self
elf
move
c
move["pos"]
move[:pos]
move
c
JSON.parse(move)
move
c
reload!
move
c
self
Board.new
Board
moves.is_a?(Hash)
moves
c
reload!
self.moveset
@moveset
c
current_user
@current_user
c
nc
n
session[:session_token]
n
s
c
@current_user
c
@current_user
current_user
@current_user
c
@current_user
current_user
c
params
c
self.is_password?('password')
@password
c
self.is_password?('password')
self
@password
c
new_password
c
BCrypt::Password.new(d).is_password?('123')
d
d = BCrypt::Password.create('123')
BCrypt::Password.new(user.password_digest)
BCrypt::Password.new(user.password_digest).is_password?('123')
BCrypt::Password.new(user.password_digest).is_password?(password)
    BCrypt::Password.new(self.password_digest).is_password?(password)
user.password_digest
user
self.password_digest
self
